// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package Di

import (
	"github.com/gedehariyogananda/pattern-golang/Controllers"
	"github.com/gedehariyogananda/pattern-golang/Middleware"
	"github.com/gedehariyogananda/pattern-golang/Repositories"
	"github.com/gedehariyogananda/pattern-golang/Services"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func DIAuth(db *gorm.DB) *Controllers.AuthController {
	authRepository := Repositories.AuthRepositoryProvider(db)
	jwtService := Services.JwtServiceProvider()
	authService := Services.AuthServiceProvider(authRepository, jwtService)
	authController := Controllers.AuthControllerProvider(authService)
	return authController
}

func DICommonMiddleware(db *gorm.DB) *Middleware.CommondMiddleware {
	jwtService := Services.JwtServiceProvider()
	commondMiddleware := Middleware.CommonMiddlewareProvider(jwtService)
	return commondMiddleware
}

func DIDivision(db *gorm.DB) *Controllers.DivisionController {
	divisionRepository := Repositories.DivisionRepositoryProvider(db)
	divisionService := Services.DivisionServiceProvider(divisionRepository)
	divisionController := Controllers.DivisionControllerPrivoder(divisionService)
	return divisionController
}

func DIEmployee(db *gorm.DB) *Controllers.EmployeeController {
	employeeRepository := Repositories.EmployeeRepositoryProvider(db)
	employeeService := Services.EmployeeServiceProvider(employeeRepository)
	employeeController := Controllers.EmployeeControllerProvider(employeeService)
	return employeeController
}
